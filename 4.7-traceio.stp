#!/usr/bin/stap

global  reads, writes, total_io

probe vfs.read.return {
	reads[pid(), execname()] += $return
	total_io[pid(), execname()] += $return
}

probe vfs.write.return {
	writes[pid(), execname()] += $return
	total_io[pid(), execname()] += $return
}

function humanreadable(bytes) {
	if (bytes > 1024*1024*1024) {
		return sprintf("%d GiB", bytes/1024/1024/1024)
	} else if (bytes > 1024*1024) {
		return sprintf("%d MiB", bytes/1024/1024)
	} else if (bytes > 1024) {
		return sprintf("%d KiB", bytes/1024)
	} else {
		return sprintf("%d B", bytes)
	}
}

probe timer.s(1) {
	foreach([p, e] in total_io- limit 10)
		printf("%8d %15s r: %12s w: %12s\n",
				p, e, humanreadable(reads[p, e]),
				humanreadable(writes[p, e]))
	printf("\n")
	#reads, writes, total_io are not zeroed, so they will keep going big
}
